p13_first <-
plot_ly(ungroup(doc.region.hcp.quarter[doc.region.hcp.quarter$quarter == i, ]), x = ~factor(region), y = ~counts,color = ~factor(hcp.major), type = 'bar') %>%
layout(title = "大区分布",  showlegend = T,
xaxis = list(title = "",showgrid = T, zeroline = T, showticklabels = T),
yaxis = list(title = "",showgrid = T, zeroline = T, showticklabels = T),
barmode = 'stack')
## picture 3 医生等级分布
doc.tier.hcp.quarter <- newdata %>%
group_by(quarter,hcp.major,doctor.tier) %>%
dplyr::summarise(counts=n()) %>%
do(plyr::rbind.fill(.,data.frame(quarter=first(.$quarter),
doctor.tier="全部",
hcp.major=first(.$hcp.major),
counts=sum(.$counts))))
## quarter j
j<-'2017 Q1'
p13_third <-
plot_ly(ungroup(doc.tier.hcp.quarter[doc.tier.hcp.quarter$quarter == j, ]), x = ~factor(doctor.tier), y = ~counts,color = ~factor(hcp.major), type = 'bar') %>%
layout(title = "医生等级分布",  showlegend = T,
xaxis = list(title = "",showgrid = T, zeroline = T, showticklabels = T),
yaxis = list(title = "",showgrid = T, zeroline = T, showticklabels = T),
barmode = 'stack')
## picture 4 科室分布
doc.department.hcp.quarter <- newdata %>%
group_by(quarter,hcp.major,department) %>%
dplyr::summarise(counts = n()) %>%
do(plyr::rbind.fill(., data_frame(quarter = first(.$quarter),
hcp.major=first(.$hcp.major),
department = '全部科室',
counts=sum(.$counts))))
## quarter i
p13_fourth <-
plot_ly(ungroup(doc.department.hcp.quarter[doc.department.hcp.quarter$quarter == i, ]), x = ~factor(department), y = ~counts,color=~factor(hcp.major), type = 'bar') %>%
layout(title = "科室分布",  showlegend = T,
xaxis = list(title = "",showgrid = T, zeroline = T, showticklabels = T),
yaxis = list(title = "",showgrid = T, zeroline = T, showticklabels = T),
barmode = 'stack')
allin<-list(page10 = list(number_of_dataset=2,
plot_type='bar',
dataset_names=c('doc.general.quarter','doc.general.quarter'),
dataset_1=c('quarter','difference','受访医生总数及每季度新增人数'),
dataset_2=c('quarter','counts','受访医生总数及每季度新增人数'),
layout='two charts horizantal'),
page11 = list(number_of_dataset=3,
plot_type='donut pie',
dataset_names=c("doc.region.quarter[doc.region.quarter$quarter=='2017 Q1',]",
"doc.tier.quarter[doc.tier.quarter$quarter=='2017 Q1',]",
"doc.department.quarter[doc.department.quarter$quarter=='2017 Q1',]"),
dataset_1=c('region','counts','大区分布'),
dataset_2=c('doctor.tier','counts','医生等级分布'),
dataset_3=c('department','counts','科室分布'),
layout="four charts"))
roll_up<-function(data){
mydoc<-addSlide(mydoc,slide.layout = data$layout)
n<-data$number_of_dataset
i=0
x<-rep(1,n)
y<-rep(1,n)
ti<-rep(1,n)
p<-rep(1,n)
while (i<n){
i=i+1
x[i]<-(data[i+3])[1]
y[i]<-(data[i+3])[2]
ti[i]<-(data[i+3])[3]
if (data$plot_type=='bar'){
p[i]<-(plot_ly(data.frame(data$dataset_names[i]),x = ~x[i], y = ~y[i],  type = "bar") %>%
layout(
title = ti[i],
yaxis2 = list(
tickfont = list(color = "red"),
overlaying = "y",
side = "right",
title = ""),
xaxis = list(title="")))
} else if (data$plot_type=='donut pie') {
p[i]<-(plot_ly(data.frame(data$dataset_names[i]),labels = ~x[i], values = ~y[i]) +
add_pie(hole = 0.6) +
layout(title = ti[i],  showlegend = T,
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE)))
}
export(p[i],paste(data$dataset_names[i],'pptx',sep='.'))
mydoc<-addImage(doc=mydoc,filename=paste(data$dataset_names[i],'pptx',sep='.'))
}
}
allin
mydoc<-pptx(title = "title", template = "Xi'an.pptx")
lapply(allin, roll_up)
mydoc<-pptx(title = "title")
# , template = "Xi'an.pptx"
lapply(allin, roll_up)
allin
mydoc<-pptx(title = "title", template = "Xi'an.pptx")
mydoc<-pptx(title = "title", template = "./03_Outputs/Xi'an.pptx")
lapply(allin, roll_up)
data = allin$page10
mydoc<-addSlide(mydoc,slide.layout = data$layout)
n<-data$number_of_dataset
i=0
x<-rep(1,n)
y<-rep(1,n)
ti<-rep(1,n)
p<-rep(1,n)
while (i<n){
i=i+1
x[i]<-(data[i+3])[1]
y[i]<-(data[i+3])[2]
ti[i]<-(data[i+3])[3]
if (data$plot_type=='bar'){
p[i]<-(plot_ly(data.frame(data$dataset_names[i]),x = ~x[i], y = ~y[i],  type = "bar") %>%
layout(
title = ti[i],
yaxis2 = list(
tickfont = list(color = "red"),
overlaying = "y",
side = "right",
title = ""),
xaxis = list(title="")))
} else if (data$plot_type=='donut pie') {
p[i]<-(plot_ly(data.frame(data$dataset_names[i]),labels = ~x[i], values = ~y[i]) +
add_pie(hole = 0.6) +
layout(title = ti[i],  showlegend = T,
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE)))
}
export(p[i],paste(data$dataset_names[i],'pptx',sep='.'))
mydoc<-addImage(doc=mydoc,filename=paste(data$dataset_names[i],'pptx',sep='.'))
}
data
mydoc<-addSlide(mydoc,slide.layout = data$layout)
n<-data$number_of_dataset
i=0
x<-rep(1,n)
y<-rep(1,n)
ti<-rep(1,n)
p<-rep(1,n)
n
while (i<n){
i=i+1
x[i]<-(data[i+3])[1]
y[i]<-(data[i+3])[2]
ti[i]<-(data[i+3])[3]
if (data$plot_type=='bar'){
p[i]<-(plot_ly(data.frame(data$dataset_names[i]),x = ~x[i], y = ~y[i],  type = "bar") %>%
layout(
title = ti[i],
yaxis2 = list(
tickfont = list(color = "red"),
overlaying = "y",
side = "right",
title = ""),
xaxis = list(title="")))
} else if (data$plot_type=='donut pie') {
p[i]<-(plot_ly(data.frame(data$dataset_names[i]),labels = ~x[i], values = ~y[i]) +
add_pie(hole = 0.6) +
layout(title = ti[i],  showlegend = T,
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE)))
}
export(p[i],paste(data$dataset_names[i],'pptx',sep='.'))
mydoc<-addImage(doc=mydoc,filename=paste(data$dataset_names[i],'pptx',sep='.'))
}
i=0
x<-rep(1,n)
y<-rep(1,n)
ti<-rep(1,n)
p<-rep(1,n)
i=i+1
x[i]<-(data[i+3])[1]
y[i]<-(data[i+3])[2]
ti[i]<-(data[i+3])[3]
if (data$plot_type=='bar'){
p[i]<-(plot_ly(data.frame(data$dataset_names[i]),x = ~x[i], y = ~y[i],  type = "bar") %>%
layout(
title = ti[i],
yaxis2 = list(
tickfont = list(color = "red"),
overlaying = "y",
side = "right",
title = ""),
xaxis = list(title="")))
} else if (data$plot_type=='donut pie') {
p[i]<-(plot_ly(data.frame(data$dataset_names[i]),labels = ~x[i], values = ~y[i]) +
add_pie(hole = 0.6) +
layout(title = ti[i],  showlegend = T,
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE)))
}
export(p[i],paste(data$dataset_names[i],'pptx',sep='.'))
mydoc<-addImage(doc=mydoc,filename=paste(data$dataset_names[i],'pptx',sep='.'))
}
i=i+1
x[i]<-(data[i+3])[1]
y[i]<-(data[i+3])[2]
ti[i]<-(data[i+3])[3]
if (data$plot_type=='bar'){
p[i]<-(plot_ly(data.frame(data$dataset_names[i]),x = ~x[i], y = ~y[i],  type = "bar") %>%
layout(
title = ti[i],
yaxis2 = list(
tickfont = list(color = "red"),
overlaying = "y",
side = "right",
title = ""),
xaxis = list(title="")))
} else if (data$plot_type=='donut pie') {
p[i]<-(plot_ly(data.frame(data$dataset_names[i]),labels = ~x[i], values = ~y[i]) +
add_pie(hole = 0.6) +
layout(title = ti[i],  showlegend = T,
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE)))
}
export(p[i],paste(data$dataset_names[i],'pptx',sep='.'))
mydoc<-addImage(doc=mydoc,filename=paste(data$dataset_names[i],'pptx',sep='.'))
i=0
x<-rep(1,n)
y<-rep(1,n)
ti<-rep(1,n)
p<-rep(1,n)
i=i+1
x[i]<-(data[i+3])[1]
y[i]<-(data[i+3])[2]
ti[i]<-(data[i+3])[3]
if (data$plot_type=='bar'){
p[i]<-(plot_ly(data.frame(data$dataset_names[i]),x = ~x[i], y = ~y[i],  type = "bar") %>%
layout(
title = ti[i],
yaxis2 = list(
tickfont = list(color = "red"),
overlaying = "y",
side = "right",
title = ""),
xaxis = list(title="")))
} else if (data$plot_type=='donut pie') {
p[i]<-(plot_ly(data.frame(data$dataset_names[i]),labels = ~x[i], values = ~y[i]) +
add_pie(hole = 0.6) +
layout(title = ti[i],  showlegend = T,
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE)))
}
p
p[1]
p[1]
i=0
x<-rep(1,n)
y<-rep(1,n)
ti<-rep(1,n)
i=i+1
x[i]<-(data[i+3])[1]
y[i]<-(data[i+3])[2]
ti[i]<-(data[i+3])[3]
if (data$plot_type=='bar'){
p<-(plot_ly(data.frame(data$dataset_names[i]),x = ~x[i], y = ~y[i],  type = "bar") %>%
layout(
title = ti[i],
yaxis2 = list(
tickfont = list(color = "red"),
overlaying = "y",
side = "right",
title = ""),
xaxis = list(title="")))
} else if (data$plot_type=='donut pie') {
p <-(plot_ly(data.frame(data$dataset_names[i]),labels = ~x[i], values = ~y[i]) +
add_pie(hole = 0.6) +
layout(title = ti[i],  showlegend = T,
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE)))
}
p
x
y
data
data = allin$page10
data[[3]]
get("doc.general.quarter")
data$dataset_names[i]
i=0
x<-rep(1,n)
y<-rep(1,n)
ti<-rep(1,n)
i=i+1
x[i]<-(data[i+3])[1]
y[i]<-(data[i+3])[2]
ti[i]<-(data[i+3])[3]
if (data$plot_type=='bar'){
p<-(plot_ly(data.frame(get(data$dataset_names[i])),
x = ~x[i],
y = ~y[i],
type = "bar") %>%
layout(
title = ti[i],
yaxis2 = list(
tickfont = list(color = "red"),
overlaying = "y",
side = "right",
title = ""),
xaxis = list(title="")))
} else if (data$plot_type=='donut pie') {
p <-(plot_ly(data.frame(get(data$dataset_names[i])),
labels = ~x[i],
values = ~y[i]) +
add_pie(hole = 0.6) +
layout(title = ti[i],  showlegend = T,
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE)))
}
p
x[i]
i=0
x<-rep(1,n)
y<-rep(1,n)
ti<-rep(1,n)
i=i+1
x[i]<-(data[i+3])[1]
y[i]<-(data[i+3])[2]
ti[i]<-(data[i+3])[3]
x
y
data[i+3]
(data[[i+3]])[1]
i=0
x<-rep(1,n)
y<-rep(1,n)
ti<-rep(1,n)
i=i+1
x[i]<-(data[[i+3]])[1]
y[i]<-(data[[i+3]])[2]
ti[i]<-(data[[i+3]])[3]
x
y
i
p<-(plot_ly(data.frame(get(data$dataset_names[i])),
x = ~x[i],
y = ~y[i],
type = "bar") %>%
layout(
title = ti[i],
yaxis2 = list(
tickfont = list(color = "red"),
overlaying = "y",
side = "right",
title = ""),
xaxis = list(title="")))
p
p<-(plot_ly(data.frame(get(data$dataset_names[i])),
x = ~as.symbol(x[i]),
y = ~as.symbol(y[i]),
type = "bar") %>%
layout(
title = ti[i],
yaxis2 = list(
tickfont = list(color = "red"),
overlaying = "y",
side = "right",
title = ""),
xaxis = list(title="")))
p
data.frame(get(data$dataset_names[i])),
data.frame(get(data$dataset_names[i]))
as.symbol(x[i])
as.symbol(y[i])
plot_ly(data.frame(get(data$dataset_names[i])),
x = ~as.symbol(x[i]),
y = ~as.symbol(y[i]),
type = "bar")
plot_ly(data.frame(get(data$dataset_names[i])),
x = ~quarter,
y = ~difference,
type = "bar")
plot_ly(data.frame(get(data$dataset_names[i])),
x =as.symbol(x[i]),
y =as.symbol(y[i]),
type = "bar")
lot_ly(data.frame(get(data$dataset_names[i])),
x = as.symbol(x[i]),
y = as.symbol(y[i]),
type = "bar")
plot_ly(data.frame(get(data$dataset_names[i])),
x = as.symbol(x[i]),
y = as.symbol(y[i]),
type = "bar")
plot_ly(data.frame(get(data$dataset_names[i])),
x = ~as.symbol(x[i]),
y = ~as.symbol(y[i]),
type = "bar")
tmp1 <- as.symbol(x[i])
tmp2 <- as.symbol(y[i])
plot_ly(data.frame(get(data$dataset_names[i])),
x = ~tmp1,
y = ~tmp2,
type = "bar")
plot_ly(x = get(data$dataset_names[i])[, x[i]],
y = get(data$dataset_names[i])[, y[i]],
type = "bar")
x = get(data$dataset_names[i])[, x[i]]
x
unlist(get(data$dataset_names[i])[, x[i]])
tmp_dat <- as.data.frame(get(data$dataset_names[i])
stringsAsFactors = FALSE)
tmp_dat <- as.data.frame(get(data$dataset_names[i]),
stringsAsFactors = FALSE)
tmp_dat
tmp_dat[, 1]
str(tmp_dat)
tmp_dat[, x[i]])
tmp_dat[, x[i]]
x[i]
x[i]<-(data[[i+3]])[1]
x[i]
i=0
x<-rep(1,n)
y<-rep(1,n)
ti<-rep(1,n)
i=i+1
x[i]<-(data[[i+3]])[1]
x[i]
tmp_dat[, x[i]]
tmp_dat[, y[i]]
y[i]
y[i]<-(data[[i+3]])[2]
y[i]
tmp_dat[, y[i]]
plot_ly(x = tmp_dat[, x[i]],
y = tmp_dat[, y[i]],
type = "bar")
p<-(plot_ly(x = tmp_dat[, x[i]],
y = tmp_dat[, y[i]],
type = "bar") %>%
layout(
title = ti[i],
yaxis2 = list(
tickfont = list(color = "red"),
overlaying = "y",
side = "right",
title = ""),
xaxis = list(title="")))
p
export(p, paste(data$dataset_names[i],'pptx',sep='.'))
mydoc<-addImage(doc=mydoc,filename=paste(data$dataset_names[i],'pptx',sep='.'))
paste(data$dataset_names[i],'pptx',sep='.')
export(p, paste("test",'pptx',sep='.'))
export(p, paste(data$dataset_names[i],'png',sep='.'))
mydoc<-addImage(doc=mydoc,filename=paste(data$dataset_names[i],'pptx',sep='.'))
mydoc<-addImage(doc=mydoc,filename=paste(data$dataset_names[i],'png',sep='.'))
mydoc
shiny::runApp('Perception_Score_Tracking')
install.packages("plotly")
runApp('Perception_Score_Tracking')
install.packages(c("shinydashboard", "shinythemes"))
install.packages("rJava")
shiny::runApp('Perception_Score_Tracking')
View(eda_dat_15_q_adv)
runApp('Perception_Score_Tracking')
runApp('Perception_Score_Tracking')
runApp('Perception_Score_Tracking')
View(smmy_psc_qtr_smmy_region)
runApp('Perception_Score_Tracking')
runApp('Perception_Score_Tracking')
runApp('Perception_Score_Tracking')
runApp('Perception_Score_Tracking')
library(shinythemes)
warnings()
shiny::runApp('Perception_Score_Tracking')
library(shinythemes)
runApp('Perception_Score_Tracking')
options()$encoding
runApp('Perception_Score_Tracking')
runApp('Perception_Score_Tracking')
shiny::runApp('Perception_Score_Tracking')
?deployApp
install.packages(c("shiny", "shinythemes", "plotly", "shinydashboard", "tidyr"))
install.packages("rJava")
install.packages("rJava")
install.packages("shiny")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("shiny")
install.packages("shinythemes")
install.packages("plotly")
install.packages("dplyr")
install.packages("shinydashboard")
install.packages("tidyr")
library(shiny)
library(shinythemes)
library(plotly)
library(dplyr)
library(shinydashboard)
library(tidyr)
install.packages("plotly")
install.packages("curl")
runApp('Perception_Score_Tracking')
install.packages("plotly")
library(shiny)
library(shinythemes)
library(plotly)
library(dplyr)
library(shinydashboard)
library(tidyr)
runApp('Perception_Score_Tracking')
library(openxlsx)
library(dplyr)
library(ggplot2)
library(lubridate)
library(tidyr)
install.packages("lubridate")
library(openxlsx)
library(dplyr)
library(ggplot2)
library(lubridate)
library(tidyr)
